package com.zzw.github.graphql.schema.inputobjects;

import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of UpdateCheckRun")
public class UpdateCheckRunInput {
    @NonNull("[!]")
    @Description("Possible further actions the integrator can perform, which a user may trigger.")
    private com.zzw.github.graphql.schema.inputobjects.CheckRunAction[] actions;
    public com.zzw.github.graphql.schema.inputobjects.CheckRunAction[] getActions() { return this.actions; }
    public void setActions(com.zzw.github.graphql.schema.inputobjects.CheckRunAction[] actions) { this.actions = actions; }

    @NonNull("!")
    @Description("The node of the check.")
    private com.zzw.github.graphql.schema.scalars.ID checkRunId;
    public com.zzw.github.graphql.schema.scalars.ID getCheckRunId() { return this.checkRunId; }
    public void setCheckRunId(com.zzw.github.graphql.schema.scalars.ID checkRunId) { this.checkRunId = checkRunId; }

    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @Description("The time that the check run finished.")
    private com.zzw.github.graphql.schema.scalars.DateTime completedAt;
    public com.zzw.github.graphql.schema.scalars.DateTime getCompletedAt() { return this.completedAt; }
    public void setCompletedAt(com.zzw.github.graphql.schema.scalars.DateTime completedAt) { this.completedAt = completedAt; }

    @Description("The final conclusion of the check.")
    private com.zzw.github.graphql.schema.enums.CheckConclusionState conclusion;
    public com.zzw.github.graphql.schema.enums.CheckConclusionState getConclusion() { return this.conclusion; }
    public void setConclusion(com.zzw.github.graphql.schema.enums.CheckConclusionState conclusion) { this.conclusion = conclusion; }

    @Description("The URL of the integrator's site that has the full details of the check.")
    private com.zzw.github.graphql.schema.scalars.URI detailsUrl;
    public com.zzw.github.graphql.schema.scalars.URI getDetailsUrl() { return this.detailsUrl; }
    public void setDetailsUrl(com.zzw.github.graphql.schema.scalars.URI detailsUrl) { this.detailsUrl = detailsUrl; }

    @Description("A reference for the run on the integrator's system.")
    private com.zzw.github.graphql.schema.scalars.String externalId;
    public com.zzw.github.graphql.schema.scalars.String getExternalId() { return this.externalId; }
    public void setExternalId(com.zzw.github.graphql.schema.scalars.String externalId) { this.externalId = externalId; }

    @Description("The name of the check.")
    private com.zzw.github.graphql.schema.scalars.String name;
    public com.zzw.github.graphql.schema.scalars.String getName() { return this.name; }
    public void setName(com.zzw.github.graphql.schema.scalars.String name) { this.name = name; }

    @Description("Descriptive details about the run.")
    private com.zzw.github.graphql.schema.inputobjects.CheckRunOutput output;
    public com.zzw.github.graphql.schema.inputobjects.CheckRunOutput getOutput() { return this.output; }
    public void setOutput(com.zzw.github.graphql.schema.inputobjects.CheckRunOutput output) { this.output = output; }

    @NonNull("!")
    @Description("The node ID of the repository.")
    private com.zzw.github.graphql.schema.scalars.ID repositoryId;
    public com.zzw.github.graphql.schema.scalars.ID getRepositoryId() { return this.repositoryId; }
    public void setRepositoryId(com.zzw.github.graphql.schema.scalars.ID repositoryId) { this.repositoryId = repositoryId; }

    @Description("The time that the check run began.")
    private com.zzw.github.graphql.schema.scalars.DateTime startedAt;
    public com.zzw.github.graphql.schema.scalars.DateTime getStartedAt() { return this.startedAt; }
    public void setStartedAt(com.zzw.github.graphql.schema.scalars.DateTime startedAt) { this.startedAt = startedAt; }

    @Description("The current status.")
    private com.zzw.github.graphql.schema.enums.RequestableCheckStatusState status;
    public com.zzw.github.graphql.schema.enums.RequestableCheckStatusState getStatus() { return this.status; }
    public void setStatus(com.zzw.github.graphql.schema.enums.RequestableCheckStatusState status) { this.status = status; }
}
