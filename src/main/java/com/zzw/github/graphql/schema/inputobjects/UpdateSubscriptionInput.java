package com.zzw.github.graphql.schema.inputobjects;

import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of UpdateSubscription")
public class UpdateSubscriptionInput {
    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @NonNull("!")
    @Description("The new state of the subscription.")
    private com.zzw.github.graphql.schema.enums.SubscriptionState state;
    public com.zzw.github.graphql.schema.enums.SubscriptionState getState() { return this.state; }
    public void setState(com.zzw.github.graphql.schema.enums.SubscriptionState state) { this.state = state; }

    @NonNull("!")
    @Description("The Node ID of the subscribable object to modify.")
    private com.zzw.github.graphql.schema.scalars.ID subscribableId;
    public com.zzw.github.graphql.schema.scalars.ID getSubscribableId() { return this.subscribableId; }
    public void setSubscribableId(com.zzw.github.graphql.schema.scalars.ID subscribableId) { this.subscribableId = subscribableId; }
}
