package com.zzw.github.graphql.schema.inputobjects;

import com.google.gson.annotations.SerializedName;
import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of UpdateProject")
public class UpdateProjectInput {
    @Description("The description of project.")
    private com.zzw.github.graphql.schema.scalars.String body;
    public com.zzw.github.graphql.schema.scalars.String getBody() { return this.body; }
    public void setBody(com.zzw.github.graphql.schema.scalars.String body) { this.body = body; }

    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @Description("The name of project.")
    private com.zzw.github.graphql.schema.scalars.String name;
    public com.zzw.github.graphql.schema.scalars.String getName() { return this.name; }
    public void setName(com.zzw.github.graphql.schema.scalars.String name) { this.name = name; }

    @NonNull("!")
    @Description("The Project ID to update.")
    private com.zzw.github.graphql.schema.scalars.ID projectId;
    public com.zzw.github.graphql.schema.scalars.ID getProjectId() { return this.projectId; }
    public void setProjectId(com.zzw.github.graphql.schema.scalars.ID projectId) { this.projectId = projectId; }

    @Description("Whether the project is public or not.")
    @SerializedName("public")
    private com.zzw.github.graphql.schema.scalars.Boolean _public;
    public com.zzw.github.graphql.schema.scalars.Boolean getPublic() { return this._public; }
    public void setPublic(com.zzw.github.graphql.schema.scalars.Boolean _public) { this._public = _public; }

    @Description("Whether the project is open or closed.")
    private com.zzw.github.graphql.schema.enums.ProjectState state;
    public com.zzw.github.graphql.schema.enums.ProjectState getState() { return this.state; }
    public void setState(com.zzw.github.graphql.schema.enums.ProjectState state) { this.state = state; }
}
