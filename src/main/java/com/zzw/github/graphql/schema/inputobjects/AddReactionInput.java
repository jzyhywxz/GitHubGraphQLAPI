package com.zzw.github.graphql.schema.inputobjects;

import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of AddReaction")
public class AddReactionInput {
    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @NonNull("!")
    @Description("The name of the emoji to react with.")
    private com.zzw.github.graphql.schema.enums.ReactionContent content;
    public com.zzw.github.graphql.schema.enums.ReactionContent getContent() { return this.content; }
    public void setContent(com.zzw.github.graphql.schema.enums.ReactionContent content) { this.content = content; }

    @NonNull("!")
    @Description("The Node ID of the subject to modify.")
    private com.zzw.github.graphql.schema.scalars.ID subjectId;
    public com.zzw.github.graphql.schema.scalars.ID getSubjectId() { return this.subjectId; }
    public void setSubjectId(com.zzw.github.graphql.schema.scalars.ID subjectId) { this.subjectId = subjectId; }
}
