package com.zzw.github.graphql.schema.inputobjects;

import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of UpdateProjectCard")
public class UpdateProjectCardInput {
    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @Description("The note of ProjectCard.")
    private com.zzw.github.graphql.schema.scalars.String note;
    public com.zzw.github.graphql.schema.scalars.String getNote() { return this.note; }
    public void setNote(com.zzw.github.graphql.schema.scalars.String note) { this.note = note; }

    @NonNull("!")
    @Description("The ProjectCard ID to update.")
    private com.zzw.github.graphql.schema.scalars.ID projectCardId;
    public com.zzw.github.graphql.schema.scalars.ID getProjectCardId() { return this.projectCardId; }
    public void setProjectCardId(com.zzw.github.graphql.schema.scalars.ID projectCardId) { this.projectCardId = projectCardId; }
}
