package com.zzw.github.graphql.schema.inputobjects;

import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of AddProjectCard")
public class AddProjectCardInput {
    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @Description("The content of the card. Must be a member of the ProjectCardItem union")
    private com.zzw.github.graphql.schema.scalars.ID contentId;
    public com.zzw.github.graphql.schema.scalars.ID getContentId() { return this.contentId; }
    public void setContentId(com.zzw.github.graphql.schema.scalars.ID contentId) { this.contentId = contentId; }

    @Description("The note on the card.")
    private com.zzw.github.graphql.schema.scalars.String note;
    public com.zzw.github.graphql.schema.scalars.String getNote() { return this.note; }
    public void setNote(com.zzw.github.graphql.schema.scalars.String note) { this.note = note; }

    @NonNull("!")
    @Description("The Node ID of the ProjectColumn.")
    private com.zzw.github.graphql.schema.scalars.ID projectColumnId;
    public com.zzw.github.graphql.schema.scalars.ID getProjectColumnId() { return this.projectColumnId; }
    public void setProjectColumnId(com.zzw.github.graphql.schema.scalars.ID projectColumnId) { this.projectColumnId = projectColumnId; }
}
