package com.zzw.github.graphql.schema.inputobjects;

import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of RemoveLabelsFromLabelable")
public class RemoveLabelsFromLabelableInput {
    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @NonNull("[!]!")
    @Description("The ids of labels to remove.")
    private com.zzw.github.graphql.schema.scalars.ID[] labelIds;
    public com.zzw.github.graphql.schema.scalars.ID[] getLabelIds() { return this.labelIds; }
    public void setLabelIds(com.zzw.github.graphql.schema.scalars.ID[] labelIds) { this.labelIds = labelIds; }

    @NonNull("!")
    @Description("The id of the Labelable to remove labels from.")
    private com.zzw.github.graphql.schema.scalars.ID labelableId;
    public com.zzw.github.graphql.schema.scalars.ID getLabelableId() { return this.labelableId; }
    public void setLabelableId(com.zzw.github.graphql.schema.scalars.ID labelableId) { this.labelableId = labelableId; }
}
