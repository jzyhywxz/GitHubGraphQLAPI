package com.zzw.github.graphql.schema.inputobjects;

import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of LockLockable")
public class LockLockableInput {
    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @Description("A reason for why the issue or pull request will be locked.")
    private com.zzw.github.graphql.schema.enums.LockReason lockReason;
    public com.zzw.github.graphql.schema.enums.LockReason getLockReason() { return this.lockReason; }
    public void setLockReason(com.zzw.github.graphql.schema.enums.LockReason lockReason) { this.lockReason = lockReason; }

    @NonNull("!")
    @Description("ID of the issue or pull request to be locked.")
    private com.zzw.github.graphql.schema.scalars.ID lockableId;
    public com.zzw.github.graphql.schema.scalars.ID getLockableId() { return this.lockableId; }
    public void setLockableId(com.zzw.github.graphql.schema.scalars.ID lockableId) { this.lockableId = lockableId; }
}
