package com.zzw.github.graphql.schema.inputobjects;

import com.google.gson.annotations.SerializedName;
import com.zzw.github.graphql.schema.annotations.Argument;
import com.zzw.github.graphql.schema.annotations.Arguments;
import com.zzw.github.graphql.schema.annotations.Description;
import com.zzw.github.graphql.schema.annotations.ImplementedBy;
import com.zzw.github.graphql.schema.annotations.NonNull;

@Description("Autogenerated input type of CreateTeamDiscussion")
public class CreateTeamDiscussionInput {
    @NonNull("!")
    @Description("The content of the discussion.")
    private com.zzw.github.graphql.schema.scalars.String body;
    public com.zzw.github.graphql.schema.scalars.String getBody() { return this.body; }
    public void setBody(com.zzw.github.graphql.schema.scalars.String body) { this.body = body; }

    @Description("A unique identifier for the client performing the mutation.")
    private com.zzw.github.graphql.schema.scalars.String clientMutationId;
    public com.zzw.github.graphql.schema.scalars.String getClientMutationId() { return this.clientMutationId; }
    public void setClientMutationId(com.zzw.github.graphql.schema.scalars.String clientMutationId) { this.clientMutationId = clientMutationId; }

    @Description("If true, restricts the visiblity of this discussion to team members and organization admins. If false or not specified, allows any organization member to view this discussion.")
    @SerializedName("private")
    private com.zzw.github.graphql.schema.scalars.Boolean _private;
    public com.zzw.github.graphql.schema.scalars.Boolean getPrivate() { return this._private; }
    public void setPrivate(com.zzw.github.graphql.schema.scalars.Boolean _private) { this._private = _private; }

    @NonNull("!")
    @Description("The ID of the team to which the discussion belongs.")
    private com.zzw.github.graphql.schema.scalars.ID teamId;
    public com.zzw.github.graphql.schema.scalars.ID getTeamId() { return this.teamId; }
    public void setTeamId(com.zzw.github.graphql.schema.scalars.ID teamId) { this.teamId = teamId; }

    @NonNull("!")
    @Description("The title of the discussion.")
    private com.zzw.github.graphql.schema.scalars.String title;
    public com.zzw.github.graphql.schema.scalars.String getTitle() { return this.title; }
    public void setTitle(com.zzw.github.graphql.schema.scalars.String title) { this.title = title; }
}
